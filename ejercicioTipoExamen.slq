CREATE TABLE ALUMNO(NUM_CUENTA INTEGER PRIMARY KEY, NOMBRE VARCHAR(25), PATERNO VARCHAR2(25));
CREATE TABLE MATERIA(ID_MATERIA INTEGER, NOMBRE VARCHAR2(120), CONSTRAINT PK_ID_MATERIA PRIMARY KEY (ID_MATERIA));
CREATE TABLE EVALUACION(NUM_CUENTA INTEGER , ID_MATERIA INTEGER, CALIFIFACION FLOAT,ESTATUS char, CONSTRAINT FK1_NUM_CUENTA foreign key (NUM_CUENTA) REFERENCES ALUMNO (NUM_CUENTA),
constraint FK2_ID_MATERIA foreign KEY (ID_MATERIA) references MATERIA (ID_MATERIA ));

drop table MATERIA;

drop sequence SEC_MATERIA;


CREATE SEQUENCE SEC_MATERIA
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

--RPOCEDIMINETOS
CREATE OR REPLACE PROCEDURE GUARDAR_MATERIA(MY_ID_MATERIA OUT INTEGER, MY_NOMBRE IN VARCHAR2)
AS
BEGIN
SELECT SEC_MATERIA.NEXTVAL INTO MY_ID_MATERIA FROM DUAL;
INSERT INTO MATERIA VALUES(MY_ID_MATERIA, MY_NOMBRE);
END;
/

DECLARE 
VALOR INTEGER;
BEGIN
GUARDAR_MATERIA(VALOR, 'BASE DE DAOS II');
GUARDAR_MATERIA(VALOR, 'NEGOCIOS ELECTRONICOS');
GUARDAR_MATERIA(VALOR, 'METODOLOGIA ESTRUCTURADA');
END;
/

SELECT * FROM ALUMNO;
SELECT * FROM MATERIA;


INSERT INTO ALUMNO VALUES(123, 'JUAN','TORRES');
INSERT INTO ALUMNO VALUES(456, 'DANY','MEZA');
INSERT INTO ALUMNO VALUES(789, 'ARMANDO','CÁRDENAS');


CREATE OR REPLACE TRIGGER disp_EVALUACION BEFORE INSERT ON EVALUACION FOR EACH ROW
BEGIN
IF :NEW.ESTATUS = 'A' OR :NEW.ESTATUS = 'R' THEN
INSERT INTO EVALUACION VALUES(estatus);
ELSE
RAISE_APPLICATION_ERROR(-20000, 'ESTATUS INCORRECTO');

IF :NEW.ESTATUS = 'A' AND :NEW.CALIFIFACION > 5 THEN
INSERT INTO EVALUACION VALUES(CALIFICACION);
ELSE
RAISE_APPLICATION_ERROR(-20000, 'CALIFIACION INCORECTA');

ELSE :NEW.ESTATUS != 'R' AND :NEW.CALIFIFACION > 5 
INSERT INTO EVALUACION VALUES(CALIFICACION);

RAISE_APPLICATION_ERROR(-20000, 'CALIFIACION INCORECTA');


END IF;
END IF;
END;
/
SELECT * FROM EVALUACION;
INSERT INTO EVALUACION VALUES(123, 1, 7.1, 'A');
